# Generated by Django 4.2.7 on 2025-08-10 16:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="成就名称")),
                ("description", models.TextField(verbose_name="成就描述")),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("learning", "学习类"),
                            ("social", "社交类"),
                            ("streak", "连击类"),
                            ("points", "积分类"),
                            ("special", "特殊类"),
                        ],
                        max_length=20,
                        verbose_name="成就类型",
                    ),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=100, verbose_name="图标"),
                ),
                (
                    "points_reward",
                    models.PositiveIntegerField(default=0, verbose_name="积分奖励"),
                ),
                (
                    "conditions",
                    models.JSONField(
                        default=dict, help_text="JSON格式的解锁条件", verbose_name="解锁条件"
                    ),
                ),
                ("is_hidden", models.BooleanField(default=False, verbose_name="隐藏成就")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "成就配置",
                "verbose_name_plural": "成就配置",
            },
        ),
        migrations.CreateModel(
            name="Competition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="竞赛名称")),
                ("description", models.TextField(verbose_name="竞赛描述")),
                ("start_time", models.DateTimeField(verbose_name="开始时间")),
                ("end_time", models.DateTimeField(verbose_name="结束时间")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "即将开始"),
                            ("active", "进行中"),
                            ("ended", "已结束"),
                            ("cancelled", "已取消"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("rules", models.JSONField(default=dict, verbose_name="竞赛规则")),
                ("rewards", models.JSONField(default=dict, verbose_name="奖励配置")),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="最大参与人数"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "竞赛活动",
                "verbose_name_plural": "竞赛活动",
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="排行榜名称")),
                (
                    "leaderboard_type",
                    models.CharField(
                        choices=[
                            ("points", "积分榜"),
                            ("streak", "连击榜"),
                            ("achievements", "成就榜"),
                            ("learning_time", "学习时长榜"),
                            ("weekly", "周榜"),
                            ("monthly", "月榜"),
                        ],
                        max_length=20,
                        verbose_name="排行榜类型",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "reset_frequency",
                    models.CharField(
                        choices=[
                            ("never", "永不重置"),
                            ("daily", "每日"),
                            ("weekly", "每周"),
                            ("monthly", "每月"),
                        ],
                        default="never",
                        max_length=20,
                        verbose_name="重置频率",
                    ),
                ),
                (
                    "last_reset",
                    models.DateTimeField(blank=True, null=True, verbose_name="最后重置时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "排行榜配置",
                "verbose_name_plural": "排行榜配置",
            },
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.PositiveIntegerField(unique=True, verbose_name="等级")),
                ("name", models.CharField(max_length=50, verbose_name="等级名称")),
                (
                    "required_experience",
                    models.PositiveIntegerField(verbose_name="所需经验值"),
                ),
                (
                    "rewards",
                    models.JSONField(
                        default=dict, help_text="JSON格式的奖励配置", verbose_name="奖励配置"
                    ),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=100, verbose_name="图标"),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
            ],
            options={
                "verbose_name": "等级配置",
                "verbose_name_plural": "等级配置",
                "ordering": ["level"],
            },
        ),
        migrations.CreateModel(
            name="UserGameProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_points",
                    models.PositiveIntegerField(default=0, verbose_name="总积分"),
                ),
                (
                    "available_points",
                    models.PositiveIntegerField(default=0, verbose_name="可用积分"),
                ),
                (
                    "current_level",
                    models.PositiveIntegerField(default=1, verbose_name="当前等级"),
                ),
                (
                    "experience_points",
                    models.PositiveIntegerField(default=0, verbose_name="经验值"),
                ),
                (
                    "current_streak",
                    models.PositiveIntegerField(default=0, verbose_name="当前连击"),
                ),
                (
                    "max_streak",
                    models.PositiveIntegerField(default=0, verbose_name="最高连击"),
                ),
                (
                    "last_activity_date",
                    models.DateField(blank=True, null=True, verbose_name="最后活动日期"),
                ),
                (
                    "achievements_count",
                    models.PositiveIntegerField(default=0, verbose_name="成就数量"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户游戏档案",
                "verbose_name_plural": "用户游戏档案",
            },
        ),
        migrations.CreateModel(
            name="PointTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField(verbose_name="积分变化")),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("earn", "获得"),
                            ("spend", "消费"),
                            ("bonus", "奖励"),
                            ("penalty", "扣除"),
                        ],
                        max_length=10,
                        verbose_name="交易类型",
                    ),
                ),
                (
                    "reason",
                    models.CharField(blank=True, max_length=200, verbose_name="原因"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "积分交易记录",
                "verbose_name_plural": "积分交易记录",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unlocked_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="解锁时间"),
                ),
                (
                    "progress",
                    models.JSONField(blank=True, default=dict, verbose_name="进度数据"),
                ),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gamification.achievement",
                        verbose_name="成就",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户成就",
                "verbose_name_plural": "用户成就",
                "unique_together": {("user", "achievement")},
            },
        ),
        migrations.CreateModel(
            name="CompetitionParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.PositiveIntegerField(default=0, verbose_name="得分")),
                (
                    "rank",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="排名"
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="参与时间"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gamification.competition",
                        verbose_name="竞赛",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "竞赛参与者",
                "verbose_name_plural": "竞赛参与者",
                "unique_together": {("competition", "user")},
            },
        ),
    ]
