# Generated by Django 4.2.7 on 2025-08-10 16:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "target_level",
                    models.CharField(
                        choices=[
                            ("beginner", "初级"),
                            ("intermediate", "中级"),
                            ("advanced", "高级"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "estimated_duration_days",
                    models.PositiveIntegerField(help_text="预计完成天数"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "草稿"),
                            ("active", "激活"),
                            ("completed", "已完成"),
                            ("paused", "暂停"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("milestones", models.JSONField(default=list, help_text="学习里程碑")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_paths",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "学习路径",
                "verbose_name_plural": "学习路径",
            },
        ),
        migrations.CreateModel(
            name="RecommendationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "model_type",
                    models.CharField(
                        choices=[
                            ("collaborative", "协同过滤"),
                            ("content_based", "基于内容"),
                            ("hybrid", "混合推荐"),
                            ("knowledge_based", "基于知识"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("parameters", models.JSONField(default=dict, help_text="模型参数配置")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "weight",
                    models.FloatField(
                        default=1.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "推荐模型",
                "verbose_name_plural": "推荐模型",
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "初级"),
                            ("intermediate", "中级"),
                            ("advanced", "高级"),
                        ],
                        default="beginner",
                        max_length=20,
                    ),
                ),
                (
                    "learning_style",
                    models.CharField(
                        choices=[
                            ("visual", "视觉型"),
                            ("auditory", "听觉型"),
                            ("kinesthetic", "动觉型"),
                            ("reading", "阅读型"),
                        ],
                        default="visual",
                        max_length=20,
                    ),
                ),
                (
                    "daily_goal_minutes",
                    models.PositiveIntegerField(
                        default=30,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(480),
                        ],
                    ),
                ),
                (
                    "preferred_topics",
                    models.JSONField(default=list, help_text="用户感兴趣的学习主题"),
                ),
                ("weak_areas", models.JSONField(default=list, help_text="用户薄弱环节")),
                (
                    "study_time_preferences",
                    models.JSONField(default=dict, help_text="学习时间偏好"),
                ),
                ("notification_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "用户偏好",
                "verbose_name_plural": "用户偏好",
            },
        ),
        migrations.CreateModel(
            name="AdaptiveDifficulty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content_type", models.CharField(max_length=50)),
                (
                    "current_difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "初级"),
                            ("intermediate", "中级"),
                            ("advanced", "高级"),
                        ],
                        max_length=20,
                    ),
                ),
                ("success_rate", models.FloatField(help_text="成功率")),
                ("adjustment_reason", models.TextField(help_text="调整原因")),
                (
                    "previous_difficulty",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="difficulty_adjustments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "自适应难度",
                "verbose_name_plural": "自适应难度",
            },
        ),
        migrations.CreateModel(
            name="PersonalizedRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("word", "单词推荐"),
                            ("article", "文章推荐"),
                            ("exercise", "练习推荐"),
                            ("course", "课程推荐"),
                            ("study_plan", "学习计划推荐"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_id", models.PositiveIntegerField(help_text="推荐内容ID")),
                ("score", models.FloatField(help_text="推荐分数")),
                ("reason", models.TextField(blank=True, help_text="推荐理由")),
                ("metadata", models.JSONField(default=dict, help_text="推荐元数据")),
                ("is_clicked", models.BooleanField(default=False)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "feedback_score",
                    models.IntegerField(
                        blank=True,
                        help_text="用户反馈评分（1-5）",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="personalization.recommendationmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "个性化推荐",
                "verbose_name_plural": "个性化推荐",
                "indexes": [
                    models.Index(
                        fields=["user", "recommendation_type"],
                        name="personaliza_user_id_567c5a_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="personaliza_created_802e7a_idx"
                    ),
                ],
                "unique_together": {
                    ("user", "recommendation_type", "content_id", "created_at")
                },
            },
        ),
        migrations.CreateModel(
            name="LearningStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "step_type",
                    models.CharField(
                        choices=[
                            ("word_study", "单词学习"),
                            ("reading", "阅读练习"),
                            ("listening", "听力练习"),
                            ("speaking", "口语练习"),
                            ("writing", "写作练习"),
                            ("grammar", "语法学习"),
                            ("test", "测试评估"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("content_id", models.PositiveIntegerField(help_text="关联内容ID")),
                ("order", models.PositiveIntegerField(help_text="步骤顺序")),
                (
                    "estimated_duration_minutes",
                    models.PositiveIntegerField(help_text="预计完成时间（分钟）"),
                ),
                ("is_required", models.BooleanField(default=True, help_text="是否必须完成")),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "completion_score",
                    models.FloatField(blank=True, help_text="完成得分", null=True),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "learning_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="personalization.learningpath",
                    ),
                ),
            ],
            options={
                "verbose_name": "学习步骤",
                "verbose_name_plural": "学习步骤",
                "ordering": ["learning_path", "order"],
                "unique_together": {("learning_path", "order")},
            },
        ),
        migrations.CreateModel(
            name="LearningBehavior",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("study", "学习"),
                            ("practice", "练习"),
                            ("review", "复习"),
                            ("test", "测试"),
                            ("skip", "跳过"),
                            ("favorite", "收藏"),
                            ("share", "分享"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        help_text="内容类型：word, article, exercise等", max_length=50
                    ),
                ),
                ("content_id", models.PositiveIntegerField(help_text="内容ID")),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(default=0, help_text="学习时长（秒）"),
                ),
                ("score", models.FloatField(blank=True, help_text="得分或正确率", null=True)),
                (
                    "difficulty_level",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("context_data", models.JSONField(default=dict, help_text="上下文数据")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_behaviors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "学习行为",
                "verbose_name_plural": "学习行为",
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="personaliza_user_id_d3c042_idx",
                    ),
                    models.Index(
                        fields=["content_type", "content_id"],
                        name="personaliza_content_52cdc2_idx",
                    ),
                ],
            },
        ),
    ]
