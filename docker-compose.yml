version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ./Natural_English_front
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - ./logs/nginx:/var/log/nginx
    environment:
      - NODE_ENV=production

  # 后端服务（假设存在）
  backend:
    # build:
    #   context: ./Natural_English_backend
    #   dockerfile: Dockerfile
    image: natural-english-backend:latest
    ports:
      - "8000:8000"
    depends_on:
      - database
      - redis
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - ./logs/backend:/app/logs
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=natural_english
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # 数据库服务
  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=natural_english
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password

  # Nginx负载均衡器（可选）
  nginx-lb:
    image: nginx:alpine
    ports:
      - "443:443"
    depends_on:
      - frontend
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx-lb:/var/log/nginx
    profiles:
      - production

  # 监控服务（可选）
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # 日志收集（可选）
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - natural-english-network
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    profiles:
      - monitoring

networks:
  natural-english-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local