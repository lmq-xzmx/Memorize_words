# Generated by Django 4.2.7 on 2025-08-10 22:15

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RoleApproval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "requested_role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        max_length=20,
                        verbose_name="申请角色",
                    ),
                ),
                (
                    "current_role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        max_length=20,
                        verbose_name="当前角色",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待审批"),
                            ("approved", "已通过"),
                            ("rejected", "已拒绝"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="审批状态",
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, max_length=500, verbose_name="申请理由"),
                ),
                (
                    "admin_comment",
                    models.TextField(blank=True, max_length=500, verbose_name="管理员备注"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="申请时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "注册管理员审批",
                "verbose_name_plural": "注册管理员审批",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RoleExtension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        help_text="绑定的用户角色",
                        max_length=20,
                        verbose_name="角色",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        help_text="字段的内部名称，用于API和数据库存储",
                        max_length=50,
                        verbose_name="字段名称",
                    ),
                ),
                (
                    "field_label",
                    models.CharField(
                        help_text="显示给用户的字段名称", max_length=100, verbose_name="字段标签"
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "文本字段"),
                            ("textarea", "多行文本"),
                            ("number", "数字字段"),
                            ("email", "邮箱字段"),
                            ("date", "日期字段"),
                            ("choice", "选择字段"),
                            ("boolean", "布尔字段"),
                            ("url", "URL字段"),
                            ("phone", "电话字段"),
                            ("file", "文件字段"),
                            ("image", "图片字段"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="字段类型",
                    ),
                ),
                (
                    "field_choices",
                    models.TextField(
                        blank=True,
                        help_text='JSON格式的选择项，仅当字段类型为choice时使用，格式：[["value1", "显示名1"], ["value2", "显示名2"]]',
                        verbose_name="选择项",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="是否必填"),
                ),
                (
                    "help_text",
                    models.CharField(blank=True, max_length=200, verbose_name="帮助文本"),
                ),
                (
                    "default_value",
                    models.TextField(
                        blank=True, help_text="字段的默认值", verbose_name="默认值"
                    ),
                ),
                (
                    "show_in_frontend_register",
                    models.BooleanField(
                        default=True, help_text="是否在前台注册页面显示此字段", verbose_name="前台注册显示"
                    ),
                ),
                (
                    "show_in_backend_admin",
                    models.BooleanField(
                        default=True, help_text="是否在后台管理界面显示此字段", verbose_name="后台管理显示"
                    ),
                ),
                (
                    "show_in_profile",
                    models.BooleanField(
                        default=True, help_text="是否在个人资料页面显示此字段", verbose_name="个人资料显示"
                    ),
                ),
                (
                    "validation_rules",
                    models.TextField(
                        blank=True, help_text="JSON格式的验证规则", verbose_name="验证规则"
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(
                        default=0, help_text="字段显示顺序，数字越小越靠前", verbose_name="排序"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "角色增项配置",
                "verbose_name_plural": "角色增项配置管理",
                "ordering": ["role", "sort_order", "field_name"],
            },
        ),
        migrations.CreateModel(
            name="RoleLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        help_text="角色类型",
                        max_length=20,
                        unique=True,
                        verbose_name="角色类型",
                    ),
                ),
                (
                    "role_name",
                    models.CharField(
                        help_text="角色显示名称", max_length=50, verbose_name="角色名称"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="角色的详细描述", verbose_name="角色描述"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "sort_order",
                    models.IntegerField(default=0, help_text="显示顺序", verbose_name="排序"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "角色级别",
                "verbose_name_plural": "角色级别管理",
                "ordering": ["sort_order", "role"],
            },
        ),
        migrations.CreateModel(
            name="RoleTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        help_text="绑定的用户角色",
                        max_length=20,
                        unique=True,
                        verbose_name="角色",
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        help_text="角色模板的显示名称", max_length=100, verbose_name="模板名称"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="模板的详细描述", verbose_name="模板描述"
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0.0",
                        help_text="模板版本号",
                        max_length=20,
                        verbose_name="模板版本",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "角色模板",
                "verbose_name_plural": "角色模板管理",
                "ordering": ["role"],
            },
        ),
        migrations.CreateModel(
            name="RoleUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "joined_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="加入时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="用户在该角色下的备注信息", verbose_name="备注"
                    ),
                ),
                (
                    "role_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_users",
                        to="accounts.rolelevel",
                        verbose_name="所属角色",
                    ),
                ),
            ],
            options={
                "verbose_name": "角色用户",
                "verbose_name_plural": "角色用户管理",
                "ordering": ["role_level", "user__username"],
            },
        ),
        migrations.CreateModel(
            name="RoleUserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="用户组的显示名称", max_length=100, verbose_name="组名称"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "学生"),
                            ("parent", "家长"),
                            ("teacher", "自由老师"),
                            ("admin", "管理员"),
                            ("dean", "教导主任"),
                            ("academic_director", "教务主任"),
                            ("research_leader", "教研组长"),
                        ],
                        help_text="绑定的用户角色",
                        max_length=20,
                        verbose_name="绑定角色",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="用户组的详细描述", verbose_name="组描述"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "角色所辖用户",
                "verbose_name_plural": "角色所辖用户",
                "ordering": ["role", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserExtension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "field_value",
                    models.TextField(
                        blank=True, help_text="增项字段的值", verbose_name="字段值"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "用户增项",
                "verbose_name_plural": "用户增项管理",
                "ordering": ["role_user", "role_extension__sort_order"],
            },
        ),
        migrations.CreateModel(
            name="UserExtensionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field_value", models.TextField(blank=True, verbose_name="字段值")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "role_extension",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.roleextension",
                        verbose_name="角色增项",
                    ),
                ),
            ],
            options={
                "verbose_name": "角色所辖用户增项",
                "verbose_name_plural": "角色所辖用户增项",
            },
        ),
        migrations.DeleteModel(
            name="AdminUserProxy",
        ),
        migrations.DeleteModel(
            name="ParentUserProxy",
        ),
        migrations.DeleteModel(
            name="StudentUserProxy",
        ),
        migrations.DeleteModel(
            name="TeacherUserProxy",
        ),
        migrations.AlterModelManagers(
            name="customuser",
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name="customuser",
            old_name="is_active_account",
            new_name="is_active",
        ),
        migrations.RemoveField(
            model_name="customuser",
            name="children",
        ),
        migrations.RemoveField(
            model_name="customuser",
            name="parent",
        ),
        migrations.AddField(
            model_name="customuser",
            name="admin_approval_status",
            field=models.CharField(
                choices=[("pending", "待审批"), ("approved", "已通过"), ("rejected", "已拒绝")],
                default="approved",
                help_text="仅管理员角色需要审批",
                max_length=20,
                verbose_name="管理员审批状态",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="nickname",
            field=models.CharField(
                blank=True,
                help_text="选填，不可与他人相同",
                max_length=50,
                null=True,
                unique=True,
                verbose_name="网名",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="phone",
            field=models.CharField(
                max_length=20,
                validators=[
                    django.core.validators.RegexValidator("^[\\d\\-\\+\\(\\)\\s]+$")
                ],
                verbose_name="手机号码",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="role",
            field=models.CharField(
                choices=[
                    ("student", "学生"),
                    ("parent", "家长"),
                    ("teacher", "自由老师"),
                    ("admin", "管理员"),
                    ("dean", "教导主任"),
                    ("academic_director", "教务主任"),
                    ("research_leader", "教研组长"),
                ],
                default="student",
                max_length=20,
                verbose_name="用户角色",
            ),
        ),
        migrations.AlterField(
            model_name="learningprofile",
            name="completed_lessons",
            field=models.PositiveIntegerField(verbose_name="完成课程数"),
        ),
        migrations.AlterField(
            model_name="learningprofile",
            name="current_streak",
            field=models.PositiveIntegerField(verbose_name="连续学习天数"),
        ),
        migrations.AlterField(
            model_name="learningprofile",
            name="max_streak",
            field=models.PositiveIntegerField(verbose_name="最长连续学习天数"),
        ),
        migrations.AlterField(
            model_name="learningprofile",
            name="total_study_time",
            field=models.PositiveIntegerField(verbose_name="总学习时长(分钟)"),
        ),
        migrations.AlterField(
            model_name="userloginlog",
            name="login_success",
            field=models.BooleanField(verbose_name="登录成功"),
        ),
        migrations.AddField(
            model_name="userextensiondata",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="userextension",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_extensions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="userextension",
            name="role_extension",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="accounts.roleextension",
                verbose_name="增项配置",
            ),
        ),
        migrations.AddField(
            model_name="userextension",
            name="role_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_extensions",
                to="accounts.roleuser",
                verbose_name="角色用户",
            ),
        ),
        migrations.AddField(
            model_name="roleusergroup",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_role_groups",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="roleusergroup",
            name="users",
            field=models.ManyToManyField(
                blank=True,
                help_text="选择该角色下的用户加入此组",
                limit_choices_to={"is_active": True},
                to=settings.AUTH_USER_MODEL,
                verbose_name="组成员",
            ),
        ),
        migrations.AddField(
            model_name="roleuser",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="role_user_records",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="roletemplate",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_role_templates",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="roleextension",
            name="role_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="template_fields",
                to="accounts.roletemplate",
                verbose_name="所属模板",
            ),
        ),
        migrations.AddField(
            model_name="roleapproval",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_roles",
                to=settings.AUTH_USER_MODEL,
                verbose_name="审批人",
            ),
        ),
        migrations.AddField(
            model_name="roleapproval",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="申请用户",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userextensiondata",
            unique_together={("user", "role_extension")},
        ),
        migrations.AlterUniqueTogether(
            name="userextension",
            unique_together={("role_user", "role_extension")},
        ),
        migrations.AlterUniqueTogether(
            name="roleuser",
            unique_together={("role_level", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="roleextension",
            unique_together={("role", "field_name"), ("role_template", "field_name")},
        ),
    ]
