# Generated by Django optimization

from django.db import migrations, models


class Migration(migrations.Migration):
    """
    角色系统优化索引迁移
    为角色相关字段添加数据库索引以提升查询性能
    """
    
    dependencies = [
        ('accounts', '0001_initial'),
    ]
    
    operations = [
        # CustomUser模型索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_role ON accounts_customuser(role);",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_role;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_role_active ON accounts_customuser(role, is_active);",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_role_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_role_staff ON accounts_customuser(role, is_staff);",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_role_staff;"
        ),
        
        # UserLoginLog索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_userloginlog_username ON accounts_userloginlog(username);",
            reverse_sql="DROP INDEX IF EXISTS idx_userloginlog_username;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_userloginlog_success ON accounts_userloginlog(login_success);",
            reverse_sql="DROP INDEX IF EXISTS idx_userloginlog_success;"
        ),
        
        # RoleExtension索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_roleextension_role_active ON accounts_roleextension(role, is_active);",
            reverse_sql="DROP INDEX IF EXISTS idx_roleextension_role_active;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_roleextension_sort ON accounts_roleextension(sort_order);",
            reverse_sql="DROP INDEX IF EXISTS idx_roleextension_sort;"
        ),
        
        # UserExtensionData索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_userextensiondata_user_role ON accounts_userextensiondata(user_id, role_extension_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_userextensiondata_user_role;"
        ),
        
        # RoleUserGroup索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_roleusergroup_role_active ON accounts_roleusergroup(role, is_active);",
            reverse_sql="DROP INDEX IF EXISTS idx_roleusergroup_role_active;"
        ),
        
        # RoleApproval索引优化
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_roleapproval_status_role ON accounts_roleapproval(status, requested_role);",
            reverse_sql="DROP INDEX IF EXISTS idx_roleapproval_status_role;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_roleapproval_created ON accounts_roleapproval(created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_roleapproval_created;"
        ),
        
        # 组合索引用于常见查询
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_role_email ON accounts_customuser(role, email) WHERE email IS NOT NULL;",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_role_email;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_role_username ON accounts_customuser(role, username);",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_role_username;"
        ),
        
        # 日期相关索引
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_customuser_date_joined ON accounts_customuser(date_joined DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_customuser_date_joined;"
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_userloginlog_time ON accounts_userloginlog(login_time DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_userloginlog_time;"
        ),
    ]