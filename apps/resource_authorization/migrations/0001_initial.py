# Generated by Django 4.2.7 on 2025-08-09 22:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ResourceAuthorization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("word", "单词"),
                            ("word_set", "单词集"),
                            ("vocabulary_list", "词库列表"),
                            ("word_resource", "单词资源"),
                        ],
                        max_length=20,
                        verbose_name="资源类型",
                    ),
                ),
                ("resource_id", models.PositiveIntegerField(verbose_name="资源ID")),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("FREE", "免费"),
                            ("PREMIUM", "高级"),
                            ("USER_GENERATED", "用户生成"),
                            ("SHARED", "分享内容"),
                        ],
                        default="FREE",
                        max_length=20,
                        verbose_name="访问级别",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                ("is_public", models.BooleanField(default=False, verbose_name="是否公开")),
                (
                    "requires_subscription",
                    models.BooleanField(default=False, verbose_name="需要订阅"),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="生效时间"
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(blank=True, null=True, verbose_name="失效时间"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="元数据"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_authorizations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "资源授权",
                "verbose_name_plural": "资源授权",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="功能名称")),
                (
                    "code",
                    models.CharField(max_length=50, unique=True, verbose_name="功能代码"),
                ),
                ("description", models.TextField(blank=True, verbose_name="功能描述")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "subscription_types",
                    models.JSONField(
                        default=list, help_text="适用的订阅类型列表", verbose_name="适用订阅类型"
                    ),
                ),
                (
                    "usage_limit",
                    models.IntegerField(blank=True, null=True, verbose_name="使用限制"),
                ),
                (
                    "daily_limit",
                    models.IntegerField(blank=True, null=True, verbose_name="每日限制"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "订阅功能",
                "verbose_name_plural": "订阅功能",
                "indexes": [
                    models.Index(fields=["code"], name="resource_au_code_8bd7c5_idx"),
                    models.Index(
                        fields=["is_active"], name="resource_au_is_acti_1468c4_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_type",
                    models.CharField(
                        choices=[
                            ("free", "免费"),
                            ("basic", "基础版"),
                            ("premium", "高级版"),
                            ("pro", "专业版"),
                        ],
                        default="free",
                        max_length=20,
                        verbose_name="订阅类型",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "激活"),
                            ("expired", "过期"),
                            ("cancelled", "已取消"),
                            ("suspended", "暂停"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="开始时间"
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="结束时间"),
                ),
                (
                    "features",
                    models.JSONField(blank=True, default=list, verbose_name="功能列表"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="订阅元数据"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户订阅",
                "verbose_name_plural": "用户订阅",
                "indexes": [
                    models.Index(
                        fields=["user"], name="resource_au_user_id_260d08_idx"
                    ),
                    models.Index(
                        fields=["subscription_type"],
                        name="resource_au_subscri_d82ce6_idx",
                    ),
                    models.Index(
                        fields=["status"], name="resource_au_status_eb5d67_idx"
                    ),
                    models.Index(
                        fields=["end_date"], name="resource_au_end_dat_a34c05_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ResourceUsageAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("view", "查看"),
                            ("select", "选择"),
                            ("download", "下载"),
                            ("share", "分享"),
                            ("favorite", "收藏"),
                            ("unfavorite", "取消收藏"),
                        ],
                        max_length=20,
                        verbose_name="操作类型",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="操作时间"),
                ),
                (
                    "session_id",
                    models.CharField(blank=True, max_length=100, verbose_name="会话ID"),
                ),
                (
                    "platform",
                    models.CharField(blank=True, max_length=20, verbose_name="平台"),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="用户代理")),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP地址"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="操作元数据"),
                ),
                (
                    "authorization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_analytics",
                        to="resource_authorization.resourceauthorization",
                        verbose_name="资源授权",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_usage",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "资源使用分析",
                "verbose_name_plural": "资源使用分析",
                "indexes": [
                    models.Index(
                        fields=["authorization"], name="resource_au_authori_6e9a11_idx"
                    ),
                    models.Index(
                        fields=["user"], name="resource_au_user_id_9ab9f7_idx"
                    ),
                    models.Index(
                        fields=["action"], name="resource_au_action_e3f76d_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="resource_au_timesta_de46b0_idx"
                    ),
                    models.Index(
                        fields=["platform"], name="resource_au_platfor_9df51f_idx"
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="resource_au_user_id_556607_idx",
                    ),
                    models.Index(
                        fields=["authorization", "action"],
                        name="resource_au_authori_68d992_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ResourceShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "share_type",
                    models.CharField(
                        choices=[
                            ("teacher_to_student", "教师分享给学生"),
                            ("user_to_group", "用户分享给群组"),
                            ("public_share", "公开分享"),
                        ],
                        max_length=20,
                        verbose_name="分享类型",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="是否激活")),
                (
                    "allow_reshare",
                    models.BooleanField(default=False, verbose_name="允许再分享"),
                ),
                (
                    "shared_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="分享时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="过期时间"),
                ),
                ("share_message", models.TextField(blank=True, verbose_name="分享消息")),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="分享元数据"),
                ),
                (
                    "authorization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="resource_authorization.resourceauthorization",
                        verbose_name="资源授权",
                    ),
                ),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shared_resources",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="分享者",
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="received_shares",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="分享对象",
                    ),
                ),
            ],
            options={
                "verbose_name": "资源分享",
                "verbose_name_plural": "资源分享",
                "indexes": [
                    models.Index(
                        fields=["shared_by"], name="resource_au_shared__34514c_idx"
                    ),
                    models.Index(
                        fields=["share_type"], name="resource_au_share_t_01bb7a_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="resource_au_is_acti_0e74e7_idx"
                    ),
                    models.Index(
                        fields=["shared_at"], name="resource_au_shared__64a8ad_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="resource_au_expires_57d4e5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ResourceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="分类名称")),
                ("description", models.TextField(blank=True, verbose_name="分类描述")),
                ("is_public", models.BooleanField(default=False, verbose_name="是否公开")),
                ("sort_order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "authorizations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="categories",
                        to="resource_authorization.resourceauthorization",
                        verbose_name="关联授权",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_categories",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="resource_authorization.resourcecategory",
                        verbose_name="父分类",
                    ),
                ),
            ],
            options={
                "verbose_name": "资源分类",
                "verbose_name_plural": "资源分类",
                "ordering": ["sort_order", "name"],
                "indexes": [
                    models.Index(
                        fields=["parent"], name="resource_au_parent__544632_idx"
                    ),
                    models.Index(
                        fields=["created_by"], name="resource_au_created_44145d_idx"
                    ),
                    models.Index(
                        fields=["is_public"], name="resource_au_is_publ_5b78b1_idx"
                    ),
                    models.Index(
                        fields=["sort_order"], name="resource_au_sort_or_6f7ab6_idx"
                    ),
                ],
                "unique_together": {("name", "parent", "created_by")},
            },
        ),
        migrations.AddIndex(
            model_name="resourceauthorization",
            index=models.Index(
                fields=["resource_type", "resource_id"],
                name="resource_au_resourc_c28377_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="resourceauthorization",
            index=models.Index(
                fields=["access_level"], name="resource_au_access__078874_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="resourceauthorization",
            index=models.Index(
                fields=["created_by"], name="resource_au_created_db44b9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="resourceauthorization",
            index=models.Index(
                fields=["is_active", "is_public"], name="resource_au_is_acti_3eb9bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="resourceauthorization",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="resource_au_valid_f_3a0391_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="resourceauthorization",
            unique_together={("resource_type", "resource_id")},
        ),
    ]
